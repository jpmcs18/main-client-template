{"version":3,"sources":["pages/modals/modal.tsx","pages/modals/message-dialog.tsx","custom-hooks/authorize-provider.tsx","constant.ts","processors/session-manager.tsx","endpoints.ts","processors/base.ts","processors/security-process.ts","processors/user-process.ts","pages/components/custom-textbox.tsx","pages/login-page.tsx","pages/components/pagination.tsx","pages/components/seachbar.tsx","pages/components/users-components/user-item.tsx","processors/personnel-process.ts","processors/role-process.ts","pages/components/custom-check-box-button.tsx","pages/components/custom-dropdown.tsx","processors/module-process.ts","pages/components/custom-check-box.tsx","pages/components/role-components/module-item-selection.tsx","pages/components/role-components/module-selection.tsx","pages/modals/manage-role.tsx","pages/modals/manage-user.tsx","pages/user-page.tsx","routes.ts","pages/components/icon.tsx","pages/modals/manage-profile.tsx","pages/components/personnel-components/personnel-item.tsx","pages/components/personnel-components/personnel-items.tsx","pages/modals/manage-personnel.tsx","pages/personnel-page.tsx","pages/components/role-components/role-item.tsx","pages/components/role-components/role-items.tsx","pages/role-page.tsx","pages/home-page.tsx","App.tsx","index.tsx"],"names":["Modal","title","className","onClose","children","useEffect","document","body","classList","add","remove","ReactDOM","createPortal","undefined","icon","faTimes","onClick","getElementById","MessageDialog","closeDialog","useContext","SetCloseMessageDialogContext","Message","MessageContext","updateAuthorize","useUpdateAuthorize","handleClose","ok","message","onOk","action","API","window","location","protocol","process","APP_SECRET","CryptoJS","require","token_add","profile_add","encrypt","data","AES","toString","decrypt","enc","Utf8","saveToken","auth","token","refreshToken","sessionStorage","setItem","JSON","stringify","clearToken","removeItem","getToken","parse","getItem","saveProfile","profile","trimmed","username","admin","personnel","distinctModules","AuthorizeContext","React","createContext","UserProfileContext","SetMessageContext","OpenMessageDialogContext","UpdateAuthorizeContext","SetBusyContext","UpdateUserProfileContext","useUserProfile","useSetMessage","useSetBusy","useUpdateUserProfile","AuthorizeProvider","useState","authorize","setAuthorize","getProfile","userProfile","setUserProfile","openMessageDialog","setOpenMessageDialog","setMessage","showLoading","setShowLoading","Provider","value","isBusy","b","clear","SecurityEnd","UserEnd","ModuleEnd","RoleEnd","PersonnelEnd","httpGet","url","a","Error","axios","get","headers","Authorization","baseURL","then","res","status","catch","err","response","refreshTokenAuthentication","httpPost","param","post","httpPut","put","httpDelete","delete","httpAuthenticatingPost","request","authenticate","params","getUserData","name","page","parameters","encodeURI","activateUsers","id","resetUserPassword","deleteUser","createUser","user","roleIds","updateUser","newRoleIds","accessToDelete","updateProfile","CustomTextBox","type","readonly","onChange","onKeyPress","toggle","setToggle","htmlFor","e","elementName","target","faEye","faEyeSlash","prev","LoginPage","password","setUser","setBusy","signIn","finally","onTextChange","key","focus","Pagination","pages","currentPageNumber","goInPage","currentPage","setCurrentPage","canGoFirst","setGoFirst","canGoBefore","setGoBefore","canGoAfter","setGoAfter","canGoLast","setGoLast","pageList","setPageList","pl","i","push","faAngleDoubleLeft","faAngleLeft","cp","map","faAngleRight","faAngleDoubleRight","SeachBar","search","searchKey","setSearchKey","placeholder","val","faSearch","UserItem","fullName","userRoles","length","x","role","description","join","active","getPersonnels","searchPersonnels","createPersonnel","updatePersonnel","deletePersonnel","getRoles","createRole","moduleIds","updateRole","newModuleIds","CustomCheckBoxButton","isCheck","CustomDropdown","itemsList","find","item","selected","getModules","CustomCheckBox","checkChange","text","checked","ModuleItemSelection","module","RoleManagementActions","viewOnly","payload","ModuleSelection","modules","Modules","ManageRole","selectedRole","accesses","setRole","setModules","fetchModules","filter","accessId","resMod","mod","acc","moduleId","initializeComponents","r","ManageUser","usersInfo","personnelItem","setPersonnelItem","personnels","setPersonnels","personnelId","roles","setRoles","roleItems","setRoleItems","setUserRoles","showModal","setShowModal","setSelectedRole","fetchPersonnels","fetchRoles","roleId","deleted","userId","prevUser","u","faUndo","undoDeleteRole","faTrash","deleteRole","viewRole","UserPage","setName","users","setUsers","pageCount","setPageCount","selectedUser","setSelectedUser","userAction","resetPassword","deleteSelectedUser","userid","searchUser","searchUsers","results","colSpan","needToReload","Routes","Icon","ManageProfile","updateProfileInfo","confirmNewPassword","newPassword","PersonnelItem","PersonnelActions","firstName","middleName","lastName","PersonnelItems","PersonnelList","ManagePersonnel","selectedPersonnel","setPersonnel","OfficePage","setKey","setSelectedPersonnel","searchPersonnel","removePersonnel","RoleItem","RoleActions","RoleItems","concerns","RoleList","concern","RolePage","setViewOnly","searchRole","searchRoles","HomePage","showProfile","setShowProfile","menus","useMemo","head","navs","route","header","console","log","faBars","menu","nav","to","exact","faPowerOff","path","component","PersonnelPage","App","render","StrictMode"],"mappings":"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","file":"static/js/main.16957d90.chunk.js","sourcesContent":["import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { ReactNode, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nexport default function Modal({\r\n  title,\r\n  className,\r\n  onClose,\r\n  children,\r\n}: {\r\n  title?: String | undefined;\r\n  className?: String | undefined;\r\n  onClose?: (() => void) | undefined;\r\n  children: ReactNode;\r\n}) {\r\n  useEffect(() => {\r\n    document.body.classList.add('body-modal');\r\n\r\n    return () => {\r\n      document.body.classList.remove('body-modal');\r\n    };\r\n  });\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <div className='modal-container'>\r\n        <div className='modal-blocker'></div>\r\n        <div className={'modal-content ' + className}>\r\n          <div className='modal-content-header'>\r\n            <div className='header-text'>{title}</div>\r\n            {onClose !== undefined && (\r\n              <FontAwesomeIcon\r\n                className='close-icon'\r\n                icon={faTimes as IconProp}\r\n                onClick={onClose}\r\n              />\r\n            )}\r\n          </div>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </>,\r\n    document.getElementById('modal') as HTMLElement\r\n  );\r\n}\r\n","import {\r\n  useMessage,\r\n  useSetCloseMessageDialog,\r\n  useUpdateAuthorize,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport Modal from './modal';\r\n\r\nexport default function MessageDialog() {\r\n  const closeDialog = useSetCloseMessageDialog();\r\n  const Message = useMessage();\r\n  const updateAuthorize = useUpdateAuthorize();\r\n\r\n  function handleClose() {\r\n    closeDialog();\r\n  }\r\n\r\n  function ok() {\r\n    if (Message?.message === 'Unauthorized') updateAuthorize(false);\r\n    closeDialog();\r\n    Message?.onOk?.();\r\n  }\r\n  return (\r\n    <Modal>\r\n      <div className='modal-content-body'>\r\n        <p>{Message?.message}</p>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        {(Message?.action === undefined || Message?.action === 'OKCANCEL') && (\r\n          <button onClick={ok} className='btn-modal btn-primary'>\r\n            OK\r\n          </button>\r\n        )}\r\n        {Message?.action === 'OKCANCEL' && (\r\n          <button onClick={handleClose} className='btn-modal btn-secondary '>\r\n            CANCEL\r\n          </button>\r\n        )}\r\n        {Message?.action === 'YESNO' && (\r\n          <button onClick={ok} className='btn-modal btn-primary'>\r\n            YES\r\n          </button>\r\n        )}\r\n        {Message?.action === 'YESNO' && (\r\n          <button onClick={handleClose} className='btn-modal btn-secondary'>\r\n            NO\r\n          </button>\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useContext, ReactNode, useState } from 'react';\r\nimport { Profile } from '../entities/user/Profile';\r\nimport MessageDialog from '../pages/modals/message-dialog';\r\nimport {\r\n  clearSession,\r\n  getProfile,\r\n  getToken,\r\n} from '../processors/session-manager';\r\n\r\nconst AuthorizeContext = React.createContext<boolean>(false);\r\nconst UserProfileContext = React.createContext<Profile | undefined>(undefined);\r\nconst SetMessageContext = React.createContext<(message: Message) => void>(\r\n  () => {}\r\n);\r\nconst SetCloseMessageDialogContext = React.createContext<() => void>(() => {});\r\nconst MessageContext = React.createContext<Message | undefined>(undefined);\r\nconst OpenMessageDialogContext = React.createContext<boolean>(false);\r\nconst UpdateAuthorizeContext = React.createContext<\r\n  (authorize: boolean) => void\r\n>(() => {});\r\nconst SetBusyContext = React.createContext<(args: boolean) => void>(() => {});\r\nconst UpdateUserProfileContext = React.createContext<\r\n  (args: Profile | undefined) => void\r\n>(() => {});\r\nexport interface Message {\r\n  message: string;\r\n  type?: MESSAGETYPE | undefined;\r\n  action?: MESSAGEACTION | undefined;\r\n  onOk?: () => void;\r\n}\r\nexport type MESSAGETYPE = 'MESSAGE' | 'ALERT';\r\nexport type MESSAGEACTION = 'YESNO' | 'OKCANCEL';\r\nexport function useSetCloseMessageDialog() {\r\n  return useContext(SetCloseMessageDialogContext);\r\n}\r\nexport function useAuthorize() {\r\n  return useContext(AuthorizeContext);\r\n}\r\nexport function useUserProfile() {\r\n  return useContext(UserProfileContext);\r\n}\r\nexport function useUpdateAuthorize() {\r\n  return useContext(UpdateAuthorizeContext);\r\n}\r\nexport function useSetMessage() {\r\n  return useContext(SetMessageContext);\r\n}\r\nexport function useMessage() {\r\n  return useContext(MessageContext);\r\n}\r\nexport function useOpenMessageDialog() {\r\n  return useContext(OpenMessageDialogContext);\r\n}\r\nexport function useSetBusy() {\r\n  return useContext(SetBusyContext);\r\n}\r\nexport function useUpdateUserProfile() {\r\n  return useContext(UpdateUserProfileContext);\r\n}\r\nexport function AuthorizeProvider({ children }: { children: ReactNode }) {\r\n  const [authorize, setAuthorize] = useState(() => {\r\n    const token = getToken();\r\n    return token?.token !== undefined;\r\n  });\r\n  const [userProfile, setUserProfile] = useState<Profile | undefined>(() => {\r\n    return getProfile();\r\n  });\r\n  const [openMessageDialog, setOpenMessageDialog] = useState<boolean>(false);\r\n  const [message, setMessage] = useState<Message>();\r\n  const [showLoading, setShowLoading] = useState<number>(() => 0);\r\n  function updateProfile(profile: Profile | undefined) {\r\n    setUserProfile(profile);\r\n  }\r\n  function updateAuthorize(authorize: boolean) {\r\n    if (!authorize) {\r\n      clearSession();\r\n      setUserProfile(undefined);\r\n    }\r\n    setAuthorize(authorize);\r\n  }\r\n  function showMessage(message: Message) {\r\n    setMessage(message);\r\n    setOpenMessageDialog(true);\r\n  }\r\n  function closeMessageDilaog() {\r\n    setOpenMessageDialog(false);\r\n  }\r\n  function setBusy(isBusy: boolean) {\r\n    setShowLoading((b) => b + (isBusy ? 1 : -1));\r\n    if (showLoading + (isBusy ? 1 : -1) === 1) {\r\n      document.body.classList.add('body-modal');\r\n    } else {\r\n      document.body.classList.remove('body-modal');\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          'loading-screen' + (showLoading > 0 ? ' loading-block' : '')\r\n        }>\r\n        <div className='loading-blocker'></div>\r\n        <div className='loading'>\r\n          <div className='balls'></div>\r\n          <div className='balls'></div>\r\n        </div>\r\n      </div>\r\n      <SetBusyContext.Provider value={setBusy}>\r\n        <OpenMessageDialogContext.Provider value={openMessageDialog}>\r\n          <SetCloseMessageDialogContext.Provider value={closeMessageDilaog}>\r\n            <MessageContext.Provider value={message}>\r\n              <SetMessageContext.Provider value={showMessage}>\r\n                <AuthorizeContext.Provider value={authorize}>\r\n                  <UpdateAuthorizeContext.Provider value={updateAuthorize}>\r\n                    <UserProfileContext.Provider value={userProfile}>\r\n                      <UpdateUserProfileContext.Provider value={updateProfile}>\r\n                        {children}\r\n                        {openMessageDialog && <MessageDialog />}\r\n                      </UpdateUserProfileContext.Provider>\r\n                    </UserProfileContext.Provider>\r\n                  </UpdateAuthorizeContext.Provider>\r\n                </AuthorizeContext.Provider>\r\n              </SetMessageContext.Provider>\r\n            </MessageContext.Provider>\r\n          </SetCloseMessageDialogContext.Provider>\r\n        </OpenMessageDialogContext.Provider>\r\n      </SetBusyContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","export const API =\r\n  process.env.NODE_ENV === 'development'\r\n    ? process.env.REACT_APP_DEV\r\n    : window.location.protocol === 'http:'\r\n    ? process.env.REACT_APP_PROD\r\n    : process.env.REACT_APP_SECURED_PROD;\r\nexport const ICON = 'TEMPLATE SYSTEM';\r\nexport const APP_SECRET = process.env.REACT_APP_SECRET_KEY;\r\nexport const ConcernStatus = {\r\n  Open: 1,\r\n  Assign: 2,\r\n  Close: 3,\r\n};\r\nexport const PersonnelConcernStatus = {\r\n  Pending: 1,\r\n  Resolved: 2,\r\n  Forwarded: 3,\r\n};\r\n","import { Profile } from '../entities/user/Profile';\r\nimport { Authentication } from '../entities/Authentication';\r\nimport { APP_SECRET } from '../constant';\r\n\r\nvar CryptoJS = require('crypto-js');\r\nconst token_add = '--pxx--';\r\nconst profile_add = '--pxx-xdx--';\r\nconst current_voter = '--pxx-xvx--';\r\n\r\nfunction encrypt(data: string): string {\r\n  return CryptoJS.AES.encrypt(data, APP_SECRET).toString();\r\n}\r\nfunction decrypt(data: string): string {\r\n  return CryptoJS.AES.decrypt(data, APP_SECRET).toString(CryptoJS.enc.Utf8);\r\n}\r\n\r\nexport function saveToken(auth: Authentication) {\r\n  if (auth.token !== undefined && auth.refreshToken !== undefined) {\r\n    sessionStorage.setItem(token_add, encrypt(JSON.stringify(auth)));\r\n  }\r\n}\r\n\r\nexport function clearToken() {\r\n  sessionStorage.removeItem(token_add);\r\n}\r\n\r\nexport function getToken(): Authentication | undefined {\r\n  try {\r\n    return JSON.parse(decrypt(sessionStorage.getItem(token_add) ?? ''));\r\n  } catch {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport function getProfile(): Profile | undefined {\r\n  try {\r\n    return JSON.parse(decrypt(sessionStorage.getItem(profile_add) ?? ''));\r\n  } catch {\r\n    return undefined;\r\n  }\r\n}\r\nexport function saveProfile(profile: Profile) {\r\n  if (profile !== undefined) {\r\n    let trimmed: Profile = {\r\n      username: profile.username,\r\n      admin: profile.admin,\r\n      personnel: profile.personnel,\r\n      distinctModules: profile.distinctModules,\r\n    };\r\n    sessionStorage.setItem(profile_add, encrypt(JSON.stringify(trimmed)));\r\n  }\r\n}\r\n\r\nexport function clearProfile() {\r\n  sessionStorage.removeItem(profile_add);\r\n}\r\n\r\nexport function getCurrentVoter(): number | undefined {\r\n  try {\r\n    return parseInt(decrypt(sessionStorage.getItem(current_voter) ?? ''));\r\n  } catch {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport function saveCurrentVoter(voterId: number) {\r\n  if (voterId !== undefined) {\r\n    sessionStorage.setItem(current_voter, encrypt(voterId.toString()));\r\n  }\r\n}\r\n\r\nexport function clearVoterId() {\r\n  sessionStorage.removeItem(current_voter);\r\n}\r\n\r\nexport function clearSession() {\r\n  sessionStorage.clear();\r\n}\r\n","export const SecurityEnd = {\r\n  Refresh: 'securities/refresh',\r\n  Login: 'securities/log',\r\n};\r\n\r\nexport const UserEnd = {\r\n  GetData: 'users/profile',\r\n  Search: 'users/search',\r\n  Activate: 'users/activate',\r\n  ResetPassword: 'users/reset-password',\r\n  Delete: 'users',\r\n  Create: 'users',\r\n  Update: 'users',\r\n  UpdateProfile: 'users/profile',\r\n};\r\nexport const ModuleEnd = {\r\n  GetList: 'modules',\r\n};\r\nexport const RoleEnd = {\r\n  Search: 'roles/search',\r\n  GetList: 'roles',\r\n  Delete: 'roles',\r\n  Create: 'roles',\r\n  Update: 'roles',\r\n};\r\n\r\nexport const PersonnelEnd = {\r\n  GetList: 'personnels',\r\n  GetListByClassification: 'personnels/classification',\r\n  GetAvailableListByClassification: 'personnels/classification/available',\r\n  Get: 'personnels',\r\n  Search: 'personnels/search',\r\n  Add: 'personnels',\r\n  Update: 'personnels',\r\n};\r\n","import axios, { AxiosRequestConfig } from 'axios';\r\nimport { Authentication } from '../entities/Authentication';\r\nimport { SecurityEnd } from '../endpoints';\r\nimport { API } from '../constant';\r\nimport { clearToken, getToken, saveToken } from './session-manager';\r\n\r\nexport async function httpGet<Return>(\r\n  url: string\r\n): Promise<Return | undefined> {\r\n  const token = getToken();\r\n  if (token?.token === null) {\r\n    throw new Error('Unauthorized');\r\n  }\r\n  return await axios\r\n    .get(url, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + token?.token,\r\n        'content-type': 'application/json',\r\n      },\r\n      baseURL: API,\r\n    } as AxiosRequestConfig)\r\n    .then(async (res) => {\r\n      switch (res.status) {\r\n        case 200:\r\n          return res.data;\r\n      }\r\n    })\r\n    .catch(async (err) => {\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            throw new Error(err.response.data);\r\n          case 403:\r\n            throw new Error('Access denied');\r\n          case 401:\r\n            if (await refreshTokenAuthentication()) {\r\n              return await httpGet<Return>(url);\r\n            }\r\n            throw new Error('Unauthorized');\r\n          case 404:\r\n            throw new Error('Not Data Found');\r\n          default:\r\n            throw new Error(err.response.data);\r\n        }\r\n      }\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nexport async function httpPost<Return>(\r\n  url: string,\r\n  param: any\r\n): Promise<Return | undefined> {\r\n  const token = getToken();\r\n  if (token?.token === undefined) {\r\n    throw new Error('Unauthorized');\r\n  }\r\n  return await axios\r\n    .post(url, param, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + token?.token,\r\n        'content-type': 'application/json',\r\n      },\r\n      baseURL: API,\r\n    } as AxiosRequestConfig)\r\n    .then(async (res) => {\r\n      switch (res.status) {\r\n        case 200:\r\n          return res.data;\r\n        case 201:\r\n          return res.data;\r\n        case 204:\r\n          return true;\r\n        default:\r\n          throw new Error('Unknown Error');\r\n      }\r\n    })\r\n    .catch(async (err) => {\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            throw new Error(err.response.data);\r\n          case 403:\r\n            throw new Error('Access denied');\r\n          case 401:\r\n            if (await refreshTokenAuthentication()) {\r\n              return await httpPost<Return>(url, param);\r\n            }\r\n            throw new Error('Unauthorized');\r\n          case 404:\r\n            throw new Error('No Data Found');\r\n          default:\r\n            throw new Error(err.response.data);\r\n        }\r\n      }\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nexport async function httpPut(url: string, param: any): Promise<boolean> {\r\n  const token = getToken();\r\n  if (token?.token === undefined) {\r\n    throw new Error('Unauthorized');\r\n  }\r\n  return await axios\r\n    .put(url, param, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + token?.token,\r\n        'content-type': 'application/json',\r\n      },\r\n      baseURL: API,\r\n    } as AxiosRequestConfig)\r\n    .then(async (res) => {\r\n      switch (res.status) {\r\n        case 204:\r\n          return true;\r\n        default:\r\n          throw new Error('Unknown Error');\r\n      }\r\n    })\r\n    .catch(async (err) => {\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            throw new Error(err.response.data);\r\n          case 403:\r\n            throw new Error('Access denied');\r\n          case 401:\r\n            if (await refreshTokenAuthentication()) {\r\n              return await httpPut(url, param);\r\n            }\r\n            throw new Error('Unauthorized');\r\n          case 404:\r\n            throw new Error('No Data Found');\r\n          default:\r\n            throw new Error(err.response.data);\r\n        }\r\n      }\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nexport async function httpDelete(url: string): Promise<boolean> {\r\n  const token = getToken();\r\n  if (token?.token === undefined) {\r\n    throw new Error('Unauthorized');\r\n  }\r\n  return await axios\r\n    .delete(url, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + token?.token,\r\n        'content-type': 'application/json',\r\n      },\r\n      baseURL: API,\r\n    } as AxiosRequestConfig)\r\n    .then(async (res) => {\r\n      switch (res.status) {\r\n        case 204:\r\n          return true;\r\n        default:\r\n          throw new Error('Unknown Error');\r\n      }\r\n    })\r\n    .catch(async (err) => {\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            throw new Error(err.response.data);\r\n          case 403:\r\n            throw new Error('Access denied');\r\n          case 401:\r\n            if (await refreshTokenAuthentication()) {\r\n              return await httpDelete(url);\r\n            }\r\n            throw new Error('Unauthorized');\r\n          case 404:\r\n            throw new Error('No Data Found');\r\n          default:\r\n            throw new Error(err.response.data);\r\n        }\r\n      }\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nexport async function httpAuthenticatingPost<Return>(\r\n  url: string,\r\n  param: any\r\n): Promise<Return | undefined> {\r\n  return await axios\r\n    .post(url, JSON.stringify(param), {\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      baseURL: API,\r\n    } as AxiosRequestConfig)\r\n    .then((res) => {\r\n      switch (res.status) {\r\n        case 200:\r\n          return res.data;\r\n        default:\r\n          throw new Error('Unknown Error');\r\n      }\r\n    })\r\n    .catch(async (err) => {\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            throw new Error(err.response.data);\r\n          case 404:\r\n            throw new Error('No Data Found');\r\n          default:\r\n            throw new Error(err.response.data);\r\n        }\r\n      }\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nexport async function refreshTokenAuthentication(): Promise<\r\n  boolean | undefined\r\n> {\r\n  const request = getToken();\r\n  return await httpAuthenticatingPost<Authentication>(\r\n    SecurityEnd.Refresh,\r\n    request\r\n  )\r\n    .then((res) => {\r\n      if (res !== undefined) {\r\n        saveToken(res);\r\n        return true;\r\n      }\r\n      throw new Error('Unauthorized');\r\n    })\r\n    .catch(() => {\r\n      clearToken();\r\n      throw new Error('Unauthorized');\r\n    });\r\n}\r\n","import { SecurityEnd } from '../endpoints';\r\nimport { Authentication } from '../entities/Authentication';\r\nimport { httpAuthenticatingPost } from './base';\r\nimport { LoginUser } from '../entities/user/LoginUser';\r\nimport { saveToken } from './session-manager';\r\n\r\nexport async function authenticate(params: LoginUser): Promise<boolean> {\r\n  return await httpAuthenticatingPost(SecurityEnd.Login, params).then((res) => {\r\n    saveToken(res as Authentication);\r\n    return true;\r\n  });\r\n}\r\n","import { UserEnd } from '../endpoints';\r\nimport { httpDelete, httpGet, httpPost, httpPut } from './base';\r\nimport { Profile } from '../entities/user/Profile';\r\nimport { UpdateUserProfile } from '../entities/user/UpdateUserProfile';\r\nimport { User } from '../entities/user/User';\r\nimport { SearchResult } from '../entities/SearchResult';\r\n\r\nexport async function getUserData(): Promise<Profile | undefined> {\r\n  return await httpGet<Profile>(UserEnd.GetData);\r\n}\r\n\r\nexport async function searchUsers(\r\n  name: string | undefined,\r\n  page: number\r\n): Promise<SearchResult<User> | undefined> {\r\n  let parameters: string = '?page=' + page;\r\n  if (name !== undefined) {\r\n    parameters += '&key=' + encodeURI(name);\r\n  }\r\n\r\n  return await httpGet<SearchResult<User>>(UserEnd.Search + parameters);\r\n}\r\n\r\nexport async function activateUsers(id: number): Promise<boolean | undefined> {\r\n  return await httpPost(UserEnd.Activate + '/' + id, null);\r\n}\r\n\r\nexport async function resetUserPassword(\r\n  id: number\r\n): Promise<boolean | undefined> {\r\n  return await httpPost(UserEnd.ResetPassword + '/' + id, null);\r\n}\r\n\r\nexport async function deleteUser(id: number): Promise<boolean> {\r\n  return await httpDelete(UserEnd.Delete + '/' + id);\r\n}\r\n\r\nexport async function createUser(\r\n  user: User,\r\n  roleIds: number[] | undefined\r\n): Promise<User | undefined> {\r\n  return await httpPost<User>(UserEnd.Create, { ...user, roleIds });\r\n}\r\n\r\nexport async function updateUser(\r\n  user: User,\r\n  newRoleIds: number[] | undefined,\r\n  accessToDelete: number[] | undefined\r\n): Promise<boolean> {\r\n  return await httpPut(UserEnd.Update + '/' + user.id, {\r\n    ...user,\r\n    newRoleIds,\r\n    accessToDelete,\r\n  });\r\n}\r\n\r\nexport async function updateProfile(\r\n  user: UpdateUserProfile\r\n): Promise<boolean | undefined> {\r\n  return await httpPost<boolean>(UserEnd.UpdateProfile, user);\r\n}\r\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react';\r\nimport { CustomReturn } from './CustomReturn';\r\nexport default function CustomTextBox({\r\n  title,\r\n  name,\r\n  type,\r\n  id,\r\n  className,\r\n  value,\r\n  readonly,\r\n  onChange,\r\n  onKeyPress,\r\n}: {\r\n  title: string;\r\n  value?: string;\r\n  name?: string;\r\n  type?: string;\r\n  id?: string;\r\n  className?: string;\r\n  readonly?: boolean | false;\r\n  onChange?: (data: CustomReturn) => void;\r\n  onKeyPress?: (key: React.KeyboardEvent<HTMLDivElement>) => void;\r\n}) {\r\n  const [toggle, setToggle] = useState(true);\r\n  return (\r\n    <div className='custom-input '>\r\n      <label htmlFor={name}>{title}</label>\r\n      <div className='input-container'>\r\n        {readonly ? (\r\n          <span>{value}</span>\r\n        ) : (\r\n          <>\r\n            <input\r\n              type={\r\n                type === 'password'\r\n                  ? toggle\r\n                    ? 'password'\r\n                    : 'text'\r\n                  : type ?? 'text'\r\n              }\r\n              name={name}\r\n              id={id}\r\n              value={value}\r\n              className={className}\r\n              onChange={(e) =>\r\n                onChange?.({ elementName: name ?? '', value: e.target.value })\r\n              }\r\n              onKeyPress={onKeyPress}\r\n            />\r\n            {type === 'password' && (\r\n              <div className='eye-container'>\r\n                <FontAwesomeIcon\r\n                  icon={(toggle ? faEye : faEyeSlash) as IconProp}\r\n                  className='eye-icon'\r\n                  onClick={() => {\r\n                    setToggle((prev) => !prev);\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n  useUpdateAuthorize,\r\n  useUpdateUserProfile,\r\n} from '../custom-hooks/authorize-provider';\r\nimport { LoginUser } from '../entities/user/LoginUser';\r\nimport { authenticate } from '../processors/security-process';\r\nimport { saveProfile } from '../processors/session-manager';\r\nimport { getUserData } from '../processors/user-process';\r\nimport CustomTextBox from './components/custom-textbox';\r\nimport { CustomReturn } from './components/CustomReturn';\r\n\r\nexport default function LoginPage() {\r\n  const [user, setUser] = useState<LoginUser>({\r\n    username: '',\r\n    password: '',\r\n  });\r\n  const setMessage = useSetMessage();\r\n  const updateProfile = useUpdateUserProfile();\r\n  const updateAuthorize = useUpdateAuthorize();\r\n  const setBusy = useSetBusy();\r\n  async function signIn() {\r\n    setBusy(true);\r\n    await authenticate(user)\r\n      .then(async (res) => {\r\n        if (res) {\r\n          await getProfile();\r\n          updateAuthorize(res);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  async function getProfile() {\r\n    setBusy(true);\r\n    await getUserData()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          saveProfile(res);\r\n          updateProfile(res);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  function onTextChange({ elementName, value }: CustomReturn) {\r\n    setUser({ ...user, [elementName]: value });\r\n  }\r\n  function onKeyPress(key: React.KeyboardEvent<HTMLDivElement>) {\r\n    if (key.key === 'Enter') {\r\n      if (user.username === '') {\r\n        document.getElementById('username')?.focus();\r\n        return;\r\n      }\r\n      if (user.password === '') {\r\n        document.getElementById('password')?.focus();\r\n        return;\r\n      }\r\n\r\n      signIn();\r\n    }\r\n  }\r\n  return (\r\n    <section>\r\n      <div className='login-container'>\r\n        <div className='login-header'>\r\n          <h1>User Authentication</h1>\r\n        </div>\r\n        <div className='login-content'>\r\n          <CustomTextBox\r\n            title='Username'\r\n            name='username'\r\n            id='username'\r\n            className='username'\r\n            onChange={onTextChange}\r\n            onKeyPress={onKeyPress}\r\n          />\r\n          <CustomTextBox\r\n            title='Password'\r\n            name='password'\r\n            id='password'\r\n            type='password'\r\n            className='password'\r\n            onChange={onTextChange}\r\n            onKeyPress={onKeyPress}\r\n          />\r\n          <button onClick={signIn} className='btn'>\r\n            Login\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faAngleDoubleLeft,\r\n  faAngleDoubleRight,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport default function Pagination({\r\n  pages,\r\n  currentPageNumber,\r\n  goInPage,\r\n}: {\r\n  pages: number;\r\n  currentPageNumber: number;\r\n  goInPage: (page: number) => void;\r\n}) {\r\n  const [currentPage, setCurrentPage] = useState<number>(currentPageNumber);\r\n  const [canGoFirst, setGoFirst] = useState<boolean>(false);\r\n  const [canGoBefore, setGoBefore] = useState<boolean>(false);\r\n  const [canGoAfter, setGoAfter] = useState<boolean>(false);\r\n  const [canGoLast, setGoLast] = useState<boolean>(false);\r\n  const [pageList, setPageList] = useState<number[]>([]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(currentPageNumber);\r\n    let pl: number[] = [];\r\n    for (let i = 1; i <= pages; i++) {\r\n      pl.push(i);\r\n    }\r\n    setPageList(pl);\r\n\r\n    setGoAfter(false);\r\n    setGoLast(false);\r\n    setGoFirst(false);\r\n    setGoBefore(false);\r\n\r\n    if (pages > 1) {\r\n      if (currentPageNumber !== pages) {\r\n        setGoAfter(true);\r\n        setGoLast(true);\r\n      }\r\n      if (currentPageNumber !== 1) {\r\n        setGoFirst(true);\r\n        setGoBefore(true);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      pl = [];\r\n    };\r\n  }, [pages, currentPageNumber]);\r\n\r\n  function goToFirst() {\r\n    if (!canGoFirst) return;\r\n\r\n    goInPage(1);\r\n\r\n    setGoFirst(false);\r\n    setGoBefore(false);\r\n    setGoAfter(true);\r\n    setGoLast(true);\r\n  }\r\n\r\n  function goToBefore() {\r\n    if (!canGoBefore) return;\r\n    setCurrentPage((cp) => {\r\n      cp = cp - 1;\r\n      if (cp === 1) {\r\n        setGoFirst(false);\r\n        setGoBefore(false);\r\n      }\r\n\r\n      goInPage(cp);\r\n\r\n      return cp;\r\n    });\r\n\r\n    setGoAfter(true);\r\n    setGoLast(true);\r\n  }\r\n\r\n  function goToAfter() {\r\n    if (!canGoAfter) return;\r\n    setCurrentPage((cp) => {\r\n      cp = cp + 1;\r\n      if (cp === pages) {\r\n        setGoAfter(false);\r\n        setGoLast(false);\r\n      }\r\n\r\n      goInPage(cp);\r\n      return cp;\r\n    });\r\n\r\n    setGoFirst(true);\r\n    setGoBefore(true);\r\n  }\r\n\r\n  function goToLast() {\r\n    if (!canGoLast) return;\r\n    setCurrentPage(pages);\r\n    setGoAfter(false);\r\n    setGoLast(false);\r\n\r\n    setGoFirst(true);\r\n    setGoBefore(true);\r\n\r\n    goInPage(pages);\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    setCurrentPage(page);\r\n    setGoFirst(true);\r\n    setGoBefore(true);\r\n    setGoAfter(true);\r\n    setGoLast(true);\r\n\r\n    if (page === 1) {\r\n      setGoFirst(false);\r\n      setGoBefore(false);\r\n    }\r\n\r\n    if (page === pages) {\r\n      setGoAfter(false);\r\n      setGoLast(false);\r\n    }\r\n\r\n    goInPage(page);\r\n  }\r\n\r\n  return (\r\n    <div className='pagination'>\r\n      <FontAwesomeIcon\r\n        icon={faAngleDoubleLeft as IconProp}\r\n        className={!canGoFirst ? 'disabled' : ''}\r\n        onClick={goToFirst}\r\n      />\r\n      <FontAwesomeIcon\r\n        icon={faAngleLeft as IconProp}\r\n        onClick={goToBefore}\r\n        className={!canGoBefore ? 'disabled' : ''}\r\n      />\r\n      <div className='pages-container'>\r\n        <button className='current-page'>{currentPage}</button>\r\n        <div className='pages'>\r\n          {pageList.map((pl) => (\r\n            <div\r\n              key={pl}\r\n              className={pl === currentPage ? 'active' : ''}\r\n              onClick={() => {\r\n                goToPage(pl);\r\n              }}>\r\n              {pl}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <FontAwesomeIcon\r\n        icon={faAngleRight as IconProp}\r\n        onClick={goToAfter}\r\n        className={!canGoAfter ? 'disabled' : ''}\r\n      />\r\n      <FontAwesomeIcon\r\n        icon={faAngleDoubleRight as IconProp}\r\n        onClick={goToLast}\r\n        className={!canGoLast ? 'disabled' : ''}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function SeachBar({\r\n  search,\r\n}: {\r\n  search: (key: string) => void;\r\n}) {\r\n  const [searchKey, setSearchKey] = useState<string>('');\r\n\r\n  function onKeyPress(key: React.KeyboardEvent<HTMLDivElement>) {\r\n    if (key.key === 'Enter') {\r\n      search(searchKey);\r\n    }\r\n  }\r\n\r\n  function searchKeyChange(val: {\r\n    target: { value: React.SetStateAction<string> };\r\n  }) {\r\n    setSearchKey(val.target.value);\r\n  }\r\n\r\n  function searchClick() {\r\n    search(searchKey);\r\n  }\r\n  return (\r\n    <div className='search-container'>\r\n      <input\r\n        type='text'\r\n        className='name'\r\n        placeholder='Search...'\r\n        value={searchKey}\r\n        onChange={searchKeyChange}\r\n        onKeyPress={onKeyPress}\r\n      />\r\n      <FontAwesomeIcon\r\n        className='search-icon'\r\n        icon={faSearch as IconProp}\r\n        onClick={searchClick}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { User } from '../../../entities/user/User';\r\nimport { USERACTIONS } from '../../user-page';\r\n\r\nexport default function UserItem({\r\n  user,\r\n  action,\r\n}: {\r\n  user: User;\r\n  action: (action: USERACTIONS) => void;\r\n}) {\r\n  return (\r\n    <tr>\r\n      <td>{user.personnel?.fullName}</td>\r\n      <td>{user.username}</td>\r\n      <td className='elipsis'>\r\n        {user.admin ? 'Admin' : 'User'}\r\n        {(user.userRoles?.length ?? 0) > 0 && ' | '}\r\n        {user.userRoles?.map((x) => x.role.description).join(' | ')}\r\n      </td>\r\n      <td>{user.active ? 'Active' : 'Inactive'}</td>\r\n      <td className='table-actions'>\r\n        <button\r\n          className='btn'\r\n          onClick={() =>\r\n            action({ type: 'Activate', id: user.id, active: user.active })\r\n          }>\r\n          Activate/Deactivate\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ type: 'ResetPassword', id: user.id })}>\r\n          Reset Password\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ type: 'Edit', user: user })}>\r\n          Edit\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ type: 'Delete', id: user.id })}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import { PersonnelEnd } from '../endpoints';\r\nimport { SearchResult } from '../entities/SearchResult';\r\nimport { Personnel } from '../entities/transaction/Personnel';\r\nimport { httpDelete, httpGet, httpPost, httpPut } from './base';\r\n\r\nexport async function getPersonnels(): Promise<Personnel[] | undefined> {\r\n  return httpGet<Personnel[]>(PersonnelEnd.GetList);\r\n}\r\n\r\nexport async function getPersonnelsByClassification(\r\n  classificationId: number\r\n): Promise<Personnel[] | undefined> {\r\n  return httpGet<Personnel[]>(\r\n    `${PersonnelEnd.GetListByClassification}?classificationId=${classificationId}`\r\n  );\r\n}\r\n\r\nexport async function getAvailablePersonnelsByClassification(\r\n  classificationId: number\r\n): Promise<Personnel[] | undefined> {\r\n  return httpGet<Personnel[]>(\r\n    `${PersonnelEnd.GetAvailableListByClassification}?classificationId=${classificationId}`\r\n  );\r\n}\r\nexport async function searchPersonnels(\r\n  key: string | undefined,\r\n  page: number\r\n): Promise<SearchResult<Personnel> | undefined> {\r\n  let parameters: string = '?page=' + page;\r\n  if (key !== undefined) {\r\n    parameters += '&key=' + encodeURI(key);\r\n  }\r\n\r\n  return await httpGet<SearchResult<Personnel>>(\r\n    PersonnelEnd.Search + parameters\r\n  );\r\n}\r\nexport async function createPersonnel(\r\n  personnel: Personnel\r\n): Promise<Personnel | undefined> {\r\n  return httpPost(PersonnelEnd.Add, personnel);\r\n}\r\nexport async function updatePersonnel(personnel: Personnel): Promise<boolean> {\r\n  return httpPut(`${PersonnelEnd.Update}/${personnel.id}`, personnel);\r\n}\r\nexport async function deletePersonnel(id: number): Promise<boolean> {\r\n  return httpDelete(`${PersonnelEnd.Update}/${id}`);\r\n}\r\n","import { RoleEnd } from '../endpoints';\r\nimport { SearchResult } from '../entities/SearchResult';\r\nimport { Role } from '../entities/user/Role';\r\nimport { httpDelete, httpGet, httpPost, httpPut } from './base';\r\nexport async function getRoles(): Promise<Role[] | undefined> {\r\n  return httpGet<Role[]>(RoleEnd.GetList);\r\n}\r\nexport async function searchRoles(\r\n  key: string | undefined,\r\n  page: number\r\n): Promise<SearchResult<Role> | undefined> {\r\n  let parameters: string = '?page=' + page;\r\n  if (key !== undefined) {\r\n    parameters += '&key=' + encodeURI(key);\r\n  }\r\n\r\n  return await httpGet<SearchResult<Role>>(RoleEnd.Search + parameters);\r\n}\r\nexport async function deleteRole(id: number): Promise<boolean> {\r\n  return await httpDelete(RoleEnd.Delete + '/' + id);\r\n}\r\n\r\nexport async function createRole(\r\n  description: string,\r\n  moduleIds: number[] | undefined\r\n): Promise<Role | undefined> {\r\n  return await httpPost<Role>(RoleEnd.Create, {\r\n    description,\r\n    moduleIds,\r\n  });\r\n}\r\n\r\nexport async function updateRole(\r\n  id: number,\r\n  description: string,\r\n  newModuleIds: number[] | undefined,\r\n  accessToDelete: number[] | undefined\r\n): Promise<boolean> {\r\n  return await httpPut(RoleEnd.Update + '/' + id, {\r\n    description,\r\n    newModuleIds,\r\n    accessToDelete,\r\n  });\r\n}\r\n","import React from 'react';\r\nimport { CustomReturn } from './CustomReturn';\r\n\r\nexport default function CustomCheckBoxButton({\r\n  title,\r\n  name,\r\n  id,\r\n  className,\r\n  isCheck,\r\n  onChange,\r\n}: {\r\n  title: string;\r\n  name?: string;\r\n  id?: string;\r\n  className?: string;\r\n  isCheck: boolean;\r\n  onChange?: (data: CustomReturn) => void;\r\n}) {\r\n  return (\r\n    <div className={'custom-input ' + className}>\r\n      <button\r\n        className={'checkbox' + (isCheck ? ' checked' : '')}\r\n        value={isCheck ? 'true' : 'false'}\r\n        id={id}\r\n        onClick={() => {\r\n          onChange?.({ elementName: name ?? '', value: !isCheck });\r\n        }}>\r\n        {title}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { CustomReturn } from './CustomReturn';\r\n\r\nexport interface DropdownItem {\r\n  key: string;\r\n  value: string;\r\n}\r\nexport default function CustomDropdown({\r\n  title,\r\n  name,\r\n  id,\r\n  className,\r\n  value,\r\n  itemsList,\r\n  readonly,\r\n  onChange,\r\n}: {\r\n  title: string;\r\n  name?: string;\r\n  id?: string;\r\n  className?: string;\r\n  value?: string;\r\n  itemsList: DropdownItem[];\r\n  readonly?: boolean | false;\r\n  onChange?: (data: CustomReturn) => void;\r\n}) {\r\n  return (\r\n    <div className='custom-input'>\r\n      <label>{title}</label>\r\n      <div className='select-container'>\r\n        {readonly ? (\r\n          <span>{itemsList.find((x) => x.key === value)?.value}</span>\r\n        ) : (\r\n          <select\r\n            id={id}\r\n            className={className}\r\n            onChange={(e) => {\r\n              onChange?.({ elementName: name ?? '', value: e.target.value });\r\n            }}>\r\n            {itemsList?.map((item) => (\r\n              <option\r\n                key={item.key}\r\n                value={item.key}\r\n                selected={item.value === value}>\r\n                {item.value}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        )}\r\n        {/* <button\r\n          className='current-selection'\r\n          value={currentValue?.value}\r\n          id={id}>\r\n          {currentValue?.value}\r\n        </button>\r\n        <FontAwesomeIcon\r\n          className='current-selection-icon'\r\n          icon={faChevronDown}\r\n        />\r\n        <div className='selection' id='selection'>\r\n          {itemsList.map((item) => (\r\n            <div\r\n              key={item.key}\r\n              className={\r\n                (item.key === currentValue?.key ? 'active' : '') +\r\n                ' selection-options'\r\n              }\r\n              onClick={() => {\r\n                setCurrentValue(item);\r\n                onChange?.({ name: name, value: item });\r\n              }}>\r\n              {item.value}\r\n            </div>\r\n          ))}\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { ModuleEnd } from '../endpoints';\r\nimport { Module } from '../entities/user/Module';\r\nimport { httpGet } from './base';\r\n\r\nexport async function getModules(): Promise<Module[] | undefined> {\r\n  return await httpGet<Module[]>(ModuleEnd.GetList);\r\n}\r\n","import React from 'react';\r\n\r\nexport default function CustomCheckBox({\r\n  isCheck,\r\n  checkChange,\r\n  id,\r\n  text,\r\n}: {\r\n  checkChange: () => void;\r\n  isCheck: boolean;\r\n  id?: string;\r\n  text?: string;\r\n}) {\r\n  return (\r\n    <div className='check'>\r\n      <label className='check-container'>\r\n        <input\r\n          type='checkbox'\r\n          id={id ?? 'check'}\r\n          onChange={checkChange}\r\n          checked={isCheck}\r\n        />\r\n        <span className='checkmark'></span>\r\n      </label>\r\n      {text && (\r\n        <label className='check-label' htmlFor={id ?? 'check'}>\r\n          {text}\r\n        </label>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { Module } from '../../../entities/user/Module';\r\nimport { RoleManagementActions } from '../../modals/manage-role';\r\nimport CustomCheckBox from '../custom-check-box';\r\n\r\nexport default function ModuleItemSelection({ module }: { module: Module }) {\r\n  const action = useContext(RoleManagementActions);\r\n  return (\r\n    <tr>\r\n      <td className='left-content'>\r\n        {module.viewOnly ? (\r\n          <div>{module.description}</div>\r\n        ) : (\r\n          <CustomCheckBox\r\n            checkChange={() => {\r\n              action({ action: 'Check', payload: module });\r\n            }}\r\n            id={module.id.toString()}\r\n            text={module.description}\r\n            isCheck={module?.checked ?? false}\r\n          />\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Modules } from '../../modals/manage-role';\r\nimport ModuleItemSelection from './module-item-selection';\r\n\r\nexport default function ModuleSelection() {\r\n  const modules = useContext(Modules);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Module Access</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {modules.map((module) => (\r\n          <ModuleItemSelection key={module.id} module={module} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Module } from '../../entities/user/Module';\r\nimport { Role } from '../../entities/user/Role';\r\nimport { getModules } from '../../processors/module-process';\r\nimport { createRole, updateRole } from '../../processors/role-process';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport ModuleSelection from '../components/role-components/module-selection';\r\nimport Modal from './modal';\r\n\r\ntype RoleManagementAction = { action: 'Check'; payload: Module };\r\nexport const RoleManagementActions = createContext<\r\n  (action: RoleManagementAction) => void\r\n>(() => {});\r\nexport const Modules = createContext<Module[]>([]);\r\nexport default function ManageRole({\r\n  selectedRole,\r\n  onClose,\r\n  viewOnly,\r\n}: {\r\n  selectedRole: Role | undefined;\r\n  onClose: (hasChanges: boolean) => void;\r\n  viewOnly: boolean;\r\n}) {\r\n  const [role, setRole] = useState<Role>(\r\n    () =>\r\n      selectedRole ?? {\r\n        id: 0,\r\n        description: '',\r\n        accesses: [],\r\n      }\r\n  );\r\n  const [modules, setModules] = useState<Module[]>([]);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    //eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchModules();\r\n  }\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (role.id === 0) {\r\n      await createRole(\r\n        role.description,\r\n        modules.filter((x) => x.checked).map((x) => x.id)\r\n      )\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Role Added',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updateRole(\r\n        role.id,\r\n        role.description,\r\n        modules\r\n          .filter((x) => x.checked && x.accessId === undefined)\r\n          .map((x) => x.id),\r\n        modules\r\n          .filter((x) => !x.checked && x.accessId !== undefined)\r\n          .map((x) => x.accessId ?? 0)\r\n      )\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Role Updated',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n  function onChange(data: CustomReturn) {\r\n    setRole((r) => {\r\n      return { ...r, [data.elementName]: data.value };\r\n    });\r\n  }\r\n  async function roleManagement(action: RoleManagementAction) {\r\n    switch (action.action) {\r\n      case 'Check':\r\n        setModules(\r\n          modules.map((x) => {\r\n            if (x.id === action.payload.id) {\r\n              x.checked = !x.checked;\r\n            }\r\n            return x;\r\n          })\r\n        );\r\n        break;\r\n    }\r\n  }\r\n  async function fetchModules() {\r\n    setBusy(true);\r\n    await getModules()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          let resMod = res.map((module) => {\r\n            const mod = role.accesses?.filter(\r\n              (acc) => acc.moduleId === module.id\r\n            )?.[0];\r\n            if (mod !== undefined) {\r\n              module.checked = true;\r\n              module.accessId = mod.id;\r\n            }\r\n            return module;\r\n          });\r\n\r\n          if (viewOnly) {\r\n            resMod = resMod\r\n              .filter((x) => x.accessId !== undefined)\r\n              .map((x) => {\r\n                x.viewOnly = true;\r\n                return x;\r\n              });\r\n          }\r\n          setModules(resMod);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => {\r\n        onClose(false);\r\n      }}\r\n      title={\r\n        viewOnly ? 'Role' : !!selectedRole?.id ? 'Update Role' : 'Add New Role'\r\n      }>\r\n      <div className='concern-management-modal-body modal-content-body concern-management'>\r\n        <CustomTextBox\r\n          title='Description'\r\n          name='description'\r\n          value={role.description}\r\n          onChange={onChange}\r\n          readonly={viewOnly}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Modules.Provider value={modules}>\r\n          <RoleManagementActions.Provider value={roleManagement}>\r\n            <ModuleSelection />\r\n          </RoleManagementActions.Provider>\r\n        </Modules.Provider>\r\n      </div>\r\n      {!viewOnly && (\r\n        <div className='modal-footer'>\r\n          <button onClick={saveData} className='btn-modal btn-primary'>\r\n            SAVE\r\n          </button>\r\n        </div>\r\n      )}\r\n    </Modal>\r\n  );\r\n}\r\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faEye, faTrash, faUndo } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Personnel } from '../../entities/transaction/Personnel';\r\nimport { Role } from '../../entities/user/Role';\r\nimport { User, UserRole } from '../../entities/user/User';\r\nimport { getPersonnels } from '../../processors/personnel-process';\r\nimport { getRoles } from '../../processors/role-process';\r\nimport { createUser, updateUser } from '../../processors/user-process';\r\nimport CustomCheckBoxButton from '../components/custom-check-box-button';\r\nimport CustomDropdown, { DropdownItem } from '../components/custom-dropdown';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport ManageRole from './manage-role';\r\nimport Modal from './modal';\r\nexport default function ManageUser({\r\n  usersInfo,\r\n  onClose,\r\n}: {\r\n  usersInfo: User | undefined;\r\n  onClose: (needToReLoad: boolean) => void;\r\n}) {\r\n  const [personnelItem, setPersonnelItem] = useState<DropdownItem[]>([]);\r\n  const [personnels, setPersonnels] = useState<Personnel[]>([]);\r\n  const [user, setUser] = useState<User>(\r\n    () =>\r\n      usersInfo ?? {\r\n        id: 0,\r\n        username: '',\r\n        name: '',\r\n        active: false,\r\n        admin: false,\r\n        personnel: undefined,\r\n        personnelId: undefined,\r\n      }\r\n  );\r\n  const [roles, setRoles] = useState<Role[]>([]);\r\n  const [roleItems, setRoleItems] = useState<DropdownItem[]>([]);\r\n  const [userRoles, setUserRoles] = useState<UserRole[]>(\r\n    () => usersInfo?.userRoles ?? []\r\n  );\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedRole, setSelectedRole] = useState<Role | undefined>();\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchPersonnels();\r\n    await fetchRoles();\r\n  }\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (user.id === 0) {\r\n      await createUser(\r\n        user,\r\n        userRoles.map((x) => x.roleId)\r\n      )\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'New User Added',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updateUser(\r\n        user,\r\n        userRoles.filter((x) => x.id === 0).map((x) => x.roleId),\r\n        userRoles.filter((x) => x.deleted).map((x) => x.id)\r\n      )\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'User Updated',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n  async function fetchPersonnels() {\r\n    setBusy(true);\r\n    await getPersonnels()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnels(res);\r\n          setPersonnelItem([\r\n            {\r\n              key: '',\r\n              value: '',\r\n            },\r\n            ...res.map((x) => {\r\n              return {\r\n                key: x.id.toString(),\r\n                value: x.fullName ?? '',\r\n              };\r\n            }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  function onChange({ elementName, value }: CustomReturn) {\r\n    if (elementName === 'role') {\r\n      let role = roles.filter((x) => x.id === +value)?.[0];\r\n      setUserRoles((r) => [\r\n        ...r,\r\n        { id: 0, roleId: role.id, role: role, userId: user.id },\r\n      ]);\r\n      setRoleItems((r) => r.filter((x) => x.key !== value));\r\n    }\r\n    if (elementName === 'personnel') {\r\n      let personnel = personnels.filter((x) => x.id === +value)?.[0];\r\n      setUser((prev) => {\r\n        return { ...prev, personnel: personnel, personnelId: personnel.id };\r\n      });\r\n      return;\r\n    }\r\n\r\n    setUser((prevUser) => {\r\n      if (prevUser === undefined) return { [elementName]: value } as User;\r\n      return { ...prevUser, [elementName]: value };\r\n    });\r\n  }\r\n  async function fetchRoles() {\r\n    setBusy(true);\r\n    await getRoles()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setRoles(res);\r\n          setRoleItems([\r\n            { key: '', value: '' },\r\n            ...res\r\n              .filter(\r\n                (x) =>\r\n                  !user.userRoles?.filter((u) => u.roleId === x.id)?.[0]?.id\r\n              )\r\n              .map((x) => {\r\n                return { key: x.id.toString(), value: x.description };\r\n              }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => {\r\n        setBusy(false);\r\n      });\r\n  }\r\n  function undoDeleteRole(role: UserRole) {\r\n    setUserRoles((res) =>\r\n      res.map((x) => {\r\n        if (x.roleId === role.roleId) x.deleted = false;\r\n        return x;\r\n      })\r\n    );\r\n  }\r\n  function deleteRole(role: UserRole) {\r\n    setUserRoles((res) => {\r\n      if (role.id === 0) {\r\n        return res.filter((x) => x.roleId !== role.roleId);\r\n      }\r\n      return res.map((x) => {\r\n        if (x.roleId === role.roleId) x.deleted = true;\r\n        return x;\r\n      });\r\n    });\r\n    if (role.id === 0) {\r\n      setRoleItems([\r\n        ...roleItems,\r\n        {\r\n          key: role.roleId?.toString() ?? '',\r\n          value: role.role?.description ?? '',\r\n        },\r\n      ]);\r\n    }\r\n  }\r\n  function viewRole(role: UserRole) {\r\n    setSelectedRole(role.role);\r\n    setShowModal(true);\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => onClose(false)}\r\n      title={(user?.id ?? 0) > 0 ? 'Update Users Information' : 'Add New User'}>\r\n      <div className='user-management-modal-body modal-content-body'>\r\n        <div>\r\n          <CustomDropdown\r\n            title='Personnel'\r\n            name='personnel'\r\n            value={user?.personnel?.fullName}\r\n            onChange={onChange}\r\n            itemsList={personnelItem}\r\n          />\r\n          <CustomTextBox\r\n            title='Username'\r\n            name='username'\r\n            value={user?.username}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <CustomCheckBoxButton\r\n            title='Is Admin'\r\n            name='admin'\r\n            isCheck={user?.admin ?? false}\r\n            onChange={onChange}\r\n          />\r\n          <CustomCheckBoxButton\r\n            title='Is Active'\r\n            name='active'\r\n            isCheck={user?.active ?? false}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <CustomDropdown\r\n            title='Role'\r\n            name='role'\r\n            onChange={onChange}\r\n            itemsList={roleItems}\r\n          />\r\n        </div>\r\n        <div className='table-container'>\r\n          <table className='item-table'>\r\n            <thead>\r\n              <tr>\r\n                <th>User Roles</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {userRoles?.map((role) => (\r\n                <tr key={role.roleId} className={role.deleted ? 'deleted' : ''}>\r\n                  <td>{role.role?.description}</td>\r\n                  <td className='table-actions'>\r\n                    {role.deleted && (\r\n                      <FontAwesomeIcon\r\n                        icon={faUndo as IconProp}\r\n                        className='action-icon table-icon-button'\r\n                        onClick={() => {\r\n                          undoDeleteRole(role);\r\n                        }}\r\n                        title='Undo'\r\n                      />\r\n                    )}\r\n                    {!role.deleted && (\r\n                      <FontAwesomeIcon\r\n                        icon={faTrash as IconProp}\r\n                        className='action-icon table-icon-button'\r\n                        onClick={() => {\r\n                          deleteRole(role);\r\n                        }}\r\n                        title='Delete'\r\n                      />\r\n                    )}\r\n                    <FontAwesomeIcon\r\n                      icon={faEye as IconProp}\r\n                      className='action-icon table-icon-button'\r\n                      onClick={() => {\r\n                        viewRole(role);\r\n                      }}\r\n                      title='View'\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n      <div>\r\n        {showModal && (\r\n          <ManageRole\r\n            onClose={() => {\r\n              setShowModal(false);\r\n            }}\r\n            selectedRole={selectedRole}\r\n            viewOnly={true}\r\n          />\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { User } from '../entities/user/User';\r\nimport {\r\n  activateUsers,\r\n  deleteUser,\r\n  resetUserPassword,\r\n  searchUsers,\r\n} from '../processors/user-process';\r\nimport Pagination from './components/pagination';\r\nimport SeachBar from './components/seachbar';\r\nimport UserItem from './components/users-components/user-item';\r\nimport ManageUser from './modals/manage-user';\r\n\r\nexport type USERACTIONS =\r\n  | { type: 'Activate'; id: number; active: boolean }\r\n  | { type: 'ResetPassword'; id: number }\r\n  | { type: 'Edit'; user: User }\r\n  | { type: 'Delete'; id: number };\r\n\r\nexport default function UserPage() {\r\n  const [name, setName] = useState<string | undefined>();\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [pageCount, setPageCount] = useState<number>(1);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState<User | undefined>();\r\n\r\n  useEffect(\r\n    () => {\r\n      searchUser(name, currentPage);\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  function userAction(action: USERACTIONS) {\r\n    switch (action.type) {\r\n      case 'Activate':\r\n        activateUser(action.id, action.active);\r\n        break;\r\n      case 'ResetPassword':\r\n        resetPassword(action.id);\r\n        break;\r\n      case 'Edit':\r\n        setShowModal(true);\r\n        setSelectedUser(action.user);\r\n        break;\r\n      case 'Delete':\r\n        setMessage({\r\n          message: 'Are you sure you want to delete this?',\r\n          action: 'YESNO',\r\n          onOk: () => {\r\n            deleteSelectedUser(action.id);\r\n          },\r\n        });\r\n        break;\r\n      default:\r\n        setMessage({ message: 'Invalid Action' });\r\n        break;\r\n    }\r\n  }\r\n\r\n  async function deleteSelectedUser(userid: number) {\r\n    setBusy(true);\r\n    await deleteUser(userid)\r\n      .then(() => {\r\n        setMessage({\r\n          message: 'User Deleted',\r\n          onOk: () => {\r\n            searchUser(name, currentPage);\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function activateUser(id: number, active: boolean) {\r\n    setMessage({\r\n      message: 'Active this user?',\r\n      action: 'YESNO',\r\n      onOk: async () => {\r\n        setBusy(true);\r\n        await activateUsers(id)\r\n          .then((res) => {\r\n            setUsers((users) =>\r\n              users.map((user) => {\r\n                if (user.id === id && active !== null) {\r\n                  user.active = !active;\r\n                }\r\n                return user;\r\n              })\r\n            );\r\n\r\n            setMessage({ message: active ? 'Deactivated' : 'Activated' });\r\n          })\r\n          .catch((err) => {\r\n            setMessage({ message: err.message });\r\n          })\r\n          .finally(() => setBusy(false));\r\n      },\r\n    });\r\n  }\r\n\r\n  function resetPassword(id: number) {\r\n    setMessage({\r\n      message: 'Reset Password?',\r\n      action: 'YESNO',\r\n      onOk: async () => {\r\n        setBusy(true);\r\n        await resetUserPassword(id)\r\n          .then(() => {\r\n            setMessage({ message: 'Password reset to default password' });\r\n          })\r\n          .catch((err) => {\r\n            setMessage({ message: err.message });\r\n          })\r\n          .finally(() => setBusy(false));\r\n      },\r\n    });\r\n  }\r\n\r\n  function searchUser(name: undefined | string, page: number) {\r\n    setBusy(true);\r\n    searchUsers(name, page)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setUsers(res.results);\r\n          setPageCount(res.pageCount);\r\n          setCurrentPage(page);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    searchUser(name, page);\r\n  }\r\n\r\n  function search(key: string) {\r\n    setName(key);\r\n    searchUser(key, 1);\r\n  }\r\n\r\n  function onClose(needToReload: boolean) {\r\n    setShowModal(false);\r\n    if (needToReload) {\r\n      searchUser(name, currentPage);\r\n    }\r\n  }\r\n  function addUser() {\r\n    setSelectedUser(undefined);\r\n    setShowModal(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className='header'>\r\n          <div className='header-text'>Users</div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <SeachBar search={search} />\r\n      </section>\r\n      <section>\r\n        <Pagination\r\n          pages={pageCount}\r\n          currentPageNumber={currentPage}\r\n          goInPage={goToPage}\r\n        />\r\n      </section>\r\n      <section>\r\n        <table className='users-content item-table'>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Username</th>\r\n              <th>Role</th>\r\n              <th>Status</th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan={6}>\r\n                <button className='btn' onClick={addUser}>\r\n                  Add New User\r\n                </button>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <UserItem key={user.id} user={user} action={userAction} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n      <>\r\n        {showModal && <ManageUser onClose={onClose} usersInfo={selectedUser} />}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","export const Routes = {\r\n  Home: '/',\r\n  User: '/users',\r\n  Role: '/roles',\r\n  Personnel: '/personnel',\r\n};\r\n","import React from 'react';\r\nimport { ICON } from '../../constant';\r\n\r\nexport default function Icon() {\r\n  return <div>{ICON}</div>;\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n  useUpdateUserProfile,\r\n  useUserProfile,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { UpdateUserProfile } from '../../entities/user/UpdateUserProfile';\r\nimport { saveProfile } from '../../processors/session-manager';\r\nimport { updateProfile } from '../../processors/user-process';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function ManageProfile({ onClose }: { onClose: () => void }) {\r\n  const profile = useUserProfile();\r\n  const updateProfileInfo = useUpdateUserProfile();\r\n  const [user, setUser] = useState<UpdateUserProfile>(() => {\r\n    return {\r\n      username: profile?.username ?? '',\r\n      personnel: profile?.personnel,\r\n      password: '',\r\n      confirmNewPassword: '',\r\n      newPassword: '',\r\n    };\r\n  });\r\n\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  async function saveData() {\r\n    if ((user.password ?? '') !== '') {\r\n      if (\r\n        (user.newPassword ?? '') !== '' &&\r\n        (user.confirmNewPassword ?? '') !== ''\r\n      ) {\r\n        if (user.newPassword !== user.confirmNewPassword) {\r\n          setMessage({ message: 'Password not match' });\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    setBusy(true);\r\n    await updateProfile(user)\r\n      .then(() => {\r\n        setMessage({\r\n          message: 'Profile Updated',\r\n          onOk: () => {\r\n            saveProfile({\r\n              ...profile,\r\n              username: user.username,\r\n            });\r\n            updateProfileInfo({\r\n              ...profile,\r\n              username: user.username,\r\n            });\r\n            onClose();\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function onChange({ elementName, value }: CustomReturn) {\r\n    setUser((prevUser) => {\r\n      return { ...prevUser, [elementName]: value };\r\n    });\r\n  }\r\n  return (\r\n    <Modal className='profile-modal' onClose={onClose} title='Users Profile'>\r\n      <div className='modal-content-body'>\r\n        <div>\r\n          <CustomTextBox\r\n            title='Name'\r\n            readonly={true}\r\n            value={user?.personnel?.fullName}\r\n          />\r\n          <CustomTextBox\r\n            title='Username'\r\n            name='username'\r\n            value={user?.username}\r\n            onChange={onChange}\r\n          />\r\n          <CustomTextBox\r\n            title='Old Password'\r\n            name='password'\r\n            value={user?.password}\r\n            type='password'\r\n            onChange={onChange}\r\n          />\r\n          <CustomTextBox\r\n            title='New Password'\r\n            name='newPassword'\r\n            type='password'\r\n            value={user?.newPassword}\r\n            onChange={onChange}\r\n          />\r\n          <CustomTextBox\r\n            title='Confirm New Password'\r\n            name='confirmNewPassword'\r\n            type='password'\r\n            value={user?.confirmNewPassword}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { Personnel } from '../../../entities/transaction/Personnel';\r\nimport { PersonnelActions } from '../../personnel-page';\r\n\r\nexport default function PersonnelItem({ personnel }: { personnel: Personnel }) {\r\n  const action = useContext(PersonnelActions);\r\n  return (\r\n    <tr>\r\n      <td>{personnel.firstName}</td>\r\n      <td>{personnel.middleName}</td>\r\n      <td>{personnel.lastName}</td>\r\n      <td className='table-actions'>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Edit', payload: personnel })}>\r\n          Edit\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Delete', payload: personnel.id })}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { PersonnelActions, PersonnelList } from '../../personnel-page';\r\nimport PersonnelItem from './personnel-item';\r\n\r\nexport default function PersonnelItems() {\r\n  const action = useContext(PersonnelActions);\r\n  const personnels = useContext(PersonnelList);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th>First Name</th>\r\n          <th>Middle Name</th>\r\n          <th>Last Name</th>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={10}>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Add' });\r\n              }}>\r\n              Add New Personnel\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {personnels.map((personnel) => (\r\n          <PersonnelItem key={personnel.id} personnel={personnel} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Personnel } from '../../entities/transaction/Personnel';\r\nimport {\r\n  createPersonnel,\r\n  updatePersonnel,\r\n} from '../../processors/personnel-process';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function ManagePersonnel({\r\n  selectedPersonnel,\r\n  onClose,\r\n}: {\r\n  selectedPersonnel: Personnel | undefined;\r\n  onClose: (hasChanges: boolean) => void;\r\n}) {\r\n  const [personnel, setPersonnel] = useState<Personnel>(\r\n    () =>\r\n      selectedPersonnel ?? {\r\n        id: 0,\r\n        firstName: '',\r\n        middleName: '',\r\n        lastName: '',\r\n      }\r\n  );\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (personnel.id === 0) {\r\n      await createPersonnel(personnel)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Personnel Added',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updatePersonnel(personnel)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Personnel Updated',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n  function onChange({ value, elementName }: CustomReturn) {\r\n    setPersonnel((r) => {\r\n      return { ...r, [elementName]: value };\r\n    });\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => {\r\n        onClose(false);\r\n      }}\r\n      title={\r\n        !!selectedPersonnel?.id ? 'Update Personnel' : 'Add New Personnel'\r\n      }>\r\n      <div className='concern-management-modal-body modal-content-body concern-management'>\r\n        <CustomTextBox\r\n          title='First Name'\r\n          name='firstName'\r\n          value={personnel.firstName}\r\n          onChange={onChange}\r\n        />\r\n        <CustomTextBox\r\n          title='Middle Name'\r\n          name='middleName'\r\n          value={personnel.middleName}\r\n          onChange={onChange}\r\n        />\r\n        <CustomTextBox\r\n          title='Last Name'\r\n          name='lastName'\r\n          value={personnel.lastName}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { Personnel } from '../entities/transaction/Personnel';\r\nimport {\r\n  deletePersonnel,\r\n  searchPersonnels,\r\n} from '../processors/personnel-process';\r\nimport Pagination from './components/pagination';\r\nimport PersonnelItems from './components/personnel-components/personnel-items';\r\nimport SeachBar from './components/seachbar';\r\nimport ManagePersonnel from './modals/manage-personnel';\r\n\r\ntype ACTIONS =\r\n  | { action: 'Add' }\r\n  | { action: 'Edit'; payload: Personnel }\r\n  | { action: 'Delete'; payload: number };\r\nexport const PersonnelList = createContext<Personnel[]>([]);\r\nexport const PersonnelActions = createContext<(action: ACTIONS) => void>(\r\n  () => {}\r\n);\r\n\r\nexport default function OfficePage() {\r\n  const [key, setKey] = useState<string | undefined>();\r\n  const [personnels, setPersonnels] = useState<Personnel[]>([]);\r\n  const [pageCount, setPageCount] = useState<number>(1);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedPersonnel, setSelectedPersonnel] = useState<\r\n    Personnel | undefined\r\n  >();\r\n\r\n  useEffect(\r\n    () => {\r\n      searchPersonnel({});\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  function personnelAction(action: ACTIONS) {\r\n    switch (action.action) {\r\n      case 'Add':\r\n        setShowModal(true);\r\n        setSelectedPersonnel(undefined);\r\n        break;\r\n      case 'Edit':\r\n        setShowModal(true);\r\n        setSelectedPersonnel(action.payload);\r\n        break;\r\n      case 'Delete':\r\n        setMessage({\r\n          message: 'Do you want to delete this personnel?',\r\n          action: 'YESNO',\r\n          onOk: () => {\r\n            removePersonnel(action.payload);\r\n          },\r\n        });\r\n        break;\r\n    }\r\n  }\r\n  async function removePersonnel(id: number) {\r\n    setBusy(true);\r\n    await deletePersonnel(id)\r\n      .then(() => {\r\n        setMessage({ message: 'Deleted.' });\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function searchPersonnel({\r\n    searchKey,\r\n    page,\r\n  }: {\r\n    searchKey?: string | undefined;\r\n    page?: number | undefined;\r\n  }) {\r\n    setBusy(true);\r\n    await searchPersonnels(searchKey ?? key, page ?? currentPage)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnels(res.results);\r\n          setPageCount(res.pageCount);\r\n          if (page !== undefined) setCurrentPage(page);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    searchPersonnel({ page: page });\r\n  }\r\n\r\n  function search(key: string) {\r\n    setKey(key);\r\n    searchPersonnel({ searchKey: key, page: 1 });\r\n  }\r\n\r\n  function onClose(needToReload: boolean) {\r\n    setShowModal(false);\r\n    if (needToReload) {\r\n      searchPersonnel({});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className='header'>\r\n          <div className='header-text'>Personnels</div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <SeachBar search={search} />\r\n      </section>\r\n      <section>\r\n        <Pagination\r\n          pages={pageCount}\r\n          currentPageNumber={currentPage}\r\n          goInPage={goToPage}></Pagination>\r\n      </section>\r\n      <section>\r\n        <PersonnelList.Provider value={personnels}>\r\n          <PersonnelActions.Provider value={personnelAction}>\r\n            <PersonnelItems />\r\n          </PersonnelActions.Provider>\r\n        </PersonnelList.Provider>\r\n      </section>\r\n      <>\r\n        {showModal && (\r\n          <ManagePersonnel\r\n            onClose={onClose}\r\n            selectedPersonnel={selectedPersonnel}\r\n          />\r\n        )}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Role } from '../../../entities/user/Role';\r\nimport { RoleActions } from '../../role-page';\r\n\r\nexport default function RoleItem({ role }: { role: Role }) {\r\n  const action = useContext(RoleActions);\r\n  return (\r\n    <tr>\r\n      <td>{role.description}</td>\r\n      <td className='table-actions'>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'View', payload: role })}>\r\n          View\r\n        </button>\r\n\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Edit', payload: role })}>\r\n          Edit\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Delete', payload: role.id })}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { RoleActions, RoleList } from '../../role-page';\r\nimport RoleItem from './role-item';\r\n\r\nexport default function RoleItems() {\r\n  const action = useContext(RoleActions);\r\n  const concerns = useContext(RoleList);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={10}>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Add' });\r\n              }}>\r\n              Add New Role\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {concerns.map((concern) => (\r\n          <RoleItem key={concern.id} role={concern} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { Module } from '../entities/user/Module';\r\nimport { Role } from '../entities/user/Role';\r\nimport { searchRoles } from '../processors/role-process';\r\nimport Pagination from './components/pagination';\r\nimport RoleItems from './components/role-components/role-items';\r\nimport SeachBar from './components/seachbar';\r\nimport ManageRole from './modals/manage-role';\r\n\r\ntype ACTIONS =\r\n  | { action: 'Add' }\r\n  | { action: 'View'; payload: Role }\r\n  | { action: 'Edit'; payload: Role }\r\n  | { action: 'Delete'; payload: number }\r\n  | { action: 'Check'; payload: Module };\r\nexport const RoleList = createContext<Role[]>([]);\r\nexport const RoleActions = createContext<(action: ACTIONS) => void>(() => {});\r\n\r\nexport default function RolePage() {\r\n  const [key, setKey] = useState<string | undefined>();\r\n  const [roles, setRoles] = useState<Role[]>([]);\r\n  const [pageCount, setPageCount] = useState<number>(1);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedRole, setSelectedRole] = useState<Role | undefined>();\r\n  const [viewOnly, setViewOnly] = useState(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      searchRole({});\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  function roleAction(action: ACTIONS) {\r\n    switch (action.action) {\r\n      case 'View':\r\n        setShowModal(true);\r\n        setSelectedRole(action.payload);\r\n        setViewOnly(true);\r\n        break;\r\n      case 'Add':\r\n        setShowModal(true);\r\n        setSelectedRole(undefined);\r\n        setViewOnly(false);\r\n        break;\r\n      case 'Edit':\r\n        setShowModal(true);\r\n        setSelectedRole(action.payload);\r\n        setViewOnly(false);\r\n        break;\r\n      // case 'Delete':\r\n      //   setMessage({\r\n      //     message: 'Are you sure you want to delete this?',\r\n      //     action: 'YESNO',\r\n      //     onOk: () => {\r\n      //       deleteSelectedUser(action.payload);\r\n      //     },\r\n      //   });\r\n      //   break;\r\n      // default:\r\n      //   setMessage({ message: 'Invalid Action' });\r\n      //   break;\r\n    }\r\n  }\r\n\r\n  function searchRole({\r\n    searchKey,\r\n    page,\r\n  }: {\r\n    searchKey?: string | undefined;\r\n    page?: number | undefined;\r\n  }) {\r\n    setBusy(true);\r\n    searchRoles(searchKey ?? key, page ?? currentPage)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setRoles(res.results);\r\n          setPageCount(res.pageCount);\r\n          if (page !== undefined) setCurrentPage(page);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    searchRole({ page: page });\r\n  }\r\n\r\n  function search(key: string) {\r\n    setKey(key);\r\n    searchRole({ searchKey: key, page: 1 });\r\n  }\r\n\r\n  function onClose(needToReload: boolean) {\r\n    setShowModal(false);\r\n    if (needToReload) {\r\n      searchRole({});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className='header'>\r\n          <div className='header-text'>Roles</div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <SeachBar search={search} />\r\n      </section>\r\n      <section>\r\n        <Pagination\r\n          pages={pageCount}\r\n          currentPageNumber={currentPage}\r\n          goInPage={goToPage}></Pagination>\r\n      </section>\r\n      <section>\r\n        <RoleList.Provider value={roles}>\r\n          <RoleActions.Provider value={roleAction}>\r\n            <RoleItems />\r\n          </RoleActions.Provider>\r\n        </RoleList.Provider>\r\n      </section>\r\n      <>\r\n        {showModal && (\r\n          <ManageRole\r\n            onClose={onClose}\r\n            selectedRole={selectedRole}\r\n            viewOnly={viewOnly}\r\n          />\r\n        )}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import { BrowserRouter, NavLink, Route, Switch } from 'react-router-dom';\r\nimport {\r\n  useAuthorize,\r\n  useSetMessage,\r\n  useUpdateAuthorize,\r\n  useUserProfile,\r\n} from '../custom-hooks/authorize-provider';\r\nimport LoginPage from './login-page';\r\nimport UserPage from './user-page';\r\n\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faBars, faPowerOff } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useMemo, useState } from 'react';\r\nimport { Routes } from '../routes';\r\nimport Icon from './components/icon';\r\nimport ManageProfile from './modals/manage-profile';\r\nimport PersonnelPage from './personnel-page';\r\nimport RolePage from './role-page';\r\n\r\nexport default function HomePage() {\r\n  const [showProfile, setShowProfile] = useState(false);\r\n  const authorize = useAuthorize();\r\n  const profile = useUserProfile();\r\n  const updateAuthorize = useUpdateAuthorize();\r\n  const setMessage = useSetMessage();\r\n  const menus: {\r\n    head: string;\r\n    navs: { route: string | undefined; name: string | undefined }[];\r\n  }[] = useMemo(\r\n    () => [\r\n      ...(profile?.admin\r\n        ? [\r\n            // {\r\n            //   head: 'Transactions',\r\n            //   navs: [],\r\n            // },\r\n            {\r\n              head: 'Managements',\r\n              navs: [\r\n                {\r\n                  route: Routes.Personnel,\r\n                  name: 'Personnel',\r\n                },\r\n                {\r\n                  route: Routes.User,\r\n                  name: 'Users',\r\n                },\r\n                {\r\n                  route: Routes.Role,\r\n                  name: 'Roles',\r\n                },\r\n              ],\r\n            },\r\n          ]\r\n        : [\r\n            {\r\n              head: 'Transactions',\r\n              navs: [\r\n                ...(profile?.distinctModules\r\n                  ?.filter((x) => x.header === 'Transaction')\r\n                  .map((x) => {\r\n                    return { route: x.route, name: x.description };\r\n                  }) ?? []),\r\n              ],\r\n            },\r\n            {\r\n              head: 'Managements',\r\n              navs: [\r\n                ...(profile?.distinctModules\r\n                  ?.filter((x) => x.header === 'Management')\r\n                  .map((x) => {\r\n                    return { route: x.route, name: x.description };\r\n                  }) ?? []),\r\n              ],\r\n            },\r\n          ]),\r\n    ],\r\n    [profile?.distinctModules, profile?.admin]\r\n  );\r\n  console.log(menus);\r\n  function logoutUser() {\r\n    setMessage({\r\n      message: 'Continue to logout?',\r\n      action: 'YESNO',\r\n      onOk: () => {\r\n        updateAuthorize(false);\r\n        setShowProfile(false);\r\n      },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {authorize ? (\r\n        <BrowserRouter>\r\n          <header>\r\n            <nav>\r\n              <div className='menu-container'>\r\n                <div className='nav-menu-container'>\r\n                  <button className='nav-menu'>\r\n                    <FontAwesomeIcon icon={faBars as IconProp} />\r\n                  </button>\r\n                  <div className='menus'>\r\n                    {menus\r\n                      .filter((x) => x.navs.length > 0)\r\n                      .map((menu) => (\r\n                        <div className='menu-items' key={menu.head}>\r\n                          <div className='head'>{menu.head}</div>\r\n                          <div className='navs'>\r\n                            {menu.navs.map((nav) => (\r\n                              <h1 key={nav.route}>\r\n                                <NavLink\r\n                                  to={nav.route ?? ''}\r\n                                  exact\r\n                                  className='nav-menu'>\r\n                                  {nav.name}\r\n                                </NavLink>\r\n                              </h1>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                  </div>\r\n                </div>\r\n                <NavLink to={Routes.Home} exact className='nav-icon'>\r\n                  <Icon />\r\n                </NavLink>\r\n              </div>\r\n              <div className='menu-container'>\r\n                <label\r\n                  className='user-name nav-menu'\r\n                  onClick={() => setShowProfile(true)}>\r\n                  {`${profile?.personnel?.fullName}`}\r\n                </label>\r\n                <button onClick={logoutUser} className='nav-menu'>\r\n                  <FontAwesomeIcon icon={faPowerOff as IconProp} />\r\n                </button>\r\n              </div>\r\n            </nav>\r\n          </header>\r\n          <Switch>\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.User\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.User} exact component={UserPage} />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Role\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.Role} exact component={RolePage} />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Personnel\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.Personnel} exact component={PersonnelPage} />\r\n            )}\r\n          </Switch>\r\n          <div>\r\n            {showProfile && (\r\n              <ManageProfile onClose={() => setShowProfile(false)} />\r\n            )}\r\n          </div>\r\n        </BrowserRouter>\r\n      ) : (\r\n        <LoginPage />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { AuthorizeProvider } from './custom-hooks/authorize-provider';\r\nimport Dashboard from './pages/home-page';\r\nimport './styles/style.css';\r\nfunction App() {\r\n  return (\r\n    <AuthorizeProvider>\r\n      <Dashboard />\r\n    </AuthorizeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}